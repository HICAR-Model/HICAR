!---------------------------------------------------------
!   Model and run meta-data
!---------------------------------------------------------
&model_version
    version = "2.0a3",                    ! This must match the version of the compiled code
    comment = "Add your comment here"     ! This will be stored in output files
/

!---------------------------------------------------------
!   Specify output and restart files and output frequencies
!---------------------------------------------------------
&output_list
    ! this is a list of variable names to be written in each output file
    names = "u","v","ta2m","hus2m", "precipitation", "swe"

    outputinterval = 3600   ! number of seconds between output time slices
    !   This is the prefix for all output files (any directories must be created prior to running)
    output_file = "output/icar_out_"    ! prefix name of output file (date will be appended)

    ! note that restart files will have ALL variables so that they can be used to restart ICAR
    restartinterval = 24    ! number of outputs to skip restarts on (restart file will only be written every n outputintervals)
    restart_file = "restart/icar_rst_"    ! prefix name of restart file (date will be appended)
/


!---------------------------------------------------------
!   Specify physics options to use for the model run
!---------------------------------------------------------
&physics
    ! Common precipitation downscaling run use pbl=0 lsm=0 mp=1 rad=0 conv=0 adv=1 wind=1
    ! For a FASTER run (simpler physics), set mp=2
    ! If surface air temperature is important use pbl=2 lsm=3 rad=2 water=2 this requires Noah LSM data
    ! Warning, convection can be unstable
    ! N/A = Not Available or Not fully implemented
    ! wishlist = No Code Present yet

    ! Planetary Boundary Layer Scheme
    pbl = 0,  ! 1=legacy (deprecated)      2=Simple (Local HP96)        3=YSU             (N/A)

    ! Land Surface Model
    lsm = 0,  ! 1=use prescribed fluxes    2=Simple LSM (N/A)           3=Noah LSM                  4=NoahMP (wishlist)

    ! Open water fluxes
    water=0,  ! 1=use prescribed (w/lsm=1) 2=Simple sea surface fluxes

    ! Microphysics Scheme
    mp  = 1,  ! 1=Thompson                 2=Simple (SB04)              3=Morrison                  4=WSM6      5=Thompson-Eidhammer
    ! Radiation Scheme
    rad = 0,  ! 1=use prescribed fluxes    2=Simple (empirical)         3=RRTMG           (wishlist)

    ! Convection / Cumulus Scheme
    conv= 0,  ! 1=Tiedke Scheme            2=Simple Scheme (wishlist)   3=Kain-Fritsch

    ! Advection Scheme
    adv = 1,  ! 1=Upwind                   2=MPDATA                     3=Adams-Bashforth (wishlist)

    ! Wind field calculations
    wind= 1   ! 1=Linear Theory
/

!---------------------------------------------------------
!   Files to be used by the run
!---------------------------------------------------------
&files_list
    !   This is the high-resolution input filename
    !   primary inputs from this file are lat, lon, and terrain, optionally soil and veg types
    init_conditions_file="baseline/geo_4km_conus.nc",

    !   This is a list of the boundary conditions files number of files must match nfiles variable above
    boundary_files= "forcing/wrfout_d01_2001-04-01_03:00:00", "forcing/wrfout_d01_2001-06-30_03:00:00"

    !   Alternatively a separate file containing one forcing file name per line may be specified
    !   This file may be generated by :
    !       ls -1 forcing/* | sed 's/$/"/g;s/^/"/g'>file_list.txt
    !   sed is used to add " around the filename.
    !   The quotes are probably only necessary if there are special characters or spaces on the line
    ! forcing_file_list = "file_list.txt"
/

!---------------------------------------------------------
!   Main List of Parameters
!---------------------------------------------------------
&parameters
    !   Set this to the starting date of the first low-resolution forcing file
    forcing_start_date = '2001-04-01 03:00:00',
    !   Set this to the date to start running the model (defaults to the forcing_start_date)
    start_date = "2001-04-02 00:00:00",
    !   Set this to the date to stop running the model
    end_date = "2001-04-10 00:00:00",
    !   Calendar used by the forcing data "gregorian", "standard", "noleap", "365-day", "360-day"
    calendar = "standard",

    !   The length of an input forcing time step
    inputinterval = 3600,   ! [s]

    !   The grid spacing of the high-resolution data
    dx = 4000.0,        ! [m]

    !   Read dz from the namelist file
    readdz = True,

    !   The number of vertical levels to run (suggest ~10-30 levels with a model top around 4-8km)
    !   this is now optional, if not supplied, ICAR will determine it from the number of levels specified
    !   if it is supplied it must be less than or equal to the number of levels specified below
    !   but it can be used to subset the number of levels used.
    !   WARNING : ICAR can be surprisingly sensitive to this parameter
    nz = 15, ! []
    !   Set this to true if the zvar in the input data is actually in units of geopotential height (m/s^2)
    z_is_geopotential = True,
    !   Set this to true if the zvar in the input data is specified on the interfaces between mass levels
    z_is_on_interface = True,
    !   Specify that the height of the forcing data will change through the simulation (common for atmospheric model-level output)
    time_varying_z = true,
    !   Use height above ground level to interpolate the wind field instead of height above sea level.
    use_agl_height = False,

    !   If the forcing data come from WRF, the temperature data probably have an offset applied
    !   t_offset will be added to the forcing temperature data.  Defaults to 0
    t_offset = 300, ! [K]

    !   Distance to smooth winds over [m] ~100000 is reasonable
    !   larger values result in less large scale convergence/divergence in the flow field
    !   smaller value result in more and can destroy orographic precip and result in odd spatial coherence
    !   depending on the forcing data resolution. At a minimum, this should be ~dxlow
    smooth_wind_distance = 72000, ! [m]
/



!---------------------------------------------------------
!   Specification of variable names in input files
!---------------------------------------------------------
&var_list
    ! These are the names of the variables in the forcing data files
    ! variables on the mass / center grid
    pvar    = "P",          ! pressure                  [Pa]
    pbvar   = "PB",         ! OPTIONAL base pressure    [Pa]
    tvar    = "T",          ! temperature               [K] (with optional offset)
    qvvar   = "QVAPOR",     ! water vapor mixing ratio  [kg/kg]
    hgtvar  = "HGT",        ! surface elevation         [m]
    zvar    = "PH",         ! model level elevations    [m or m/s^2 if z_is_geopotential]
    zbvar   = "PHB",        ! OPTIONAL base height      [m or m/s^2]
    latvar  = "XLAT",       ! latitude                  [degrees]
    lonvar  = "XLONG",      ! longitude                 [degrees]
    sst_var = "TSK"         ! Water surface temperature [K]

    ! WARNING, if U and V are "grid relative" (e.g. output from WRF) and on a skewed grid, this will cause problems
    ! run the helpers/wrf2icar.sh script first to rotate the wind field to be east-west, north-south relative
    ! variables on the ew staggered (U) grid
    uvar    = "U",          ! East-West wind speed      [m/s]

    ! variables on the NS staggered (V) grid
    vvar    = "V",          ! North-South wind speed    [m/s]

    ! Used to rotate the a NS / EW wind field into the ICAR domain
    sinalpha_var="SINALPHA"
    cosalpha_var="COSALPHA"

    ! NOTE, these variables should be in the high-resolution initial conditions netcdf file
    lat_hi  = "XLAT_M",     ! latitude (mass grid)      [degrees]
    lon_hi  = "XLONG_M",    ! longitude (mass grid)     [degrees]
    hgt_hi  = "HGT_M"       ! surface elevation         [m]

    ! specified with staggered U and V grids on the high-res domain
    ulat_hi = "XLAT_U",     ! latitude  (ew-staggered grid) [degrees]
    ulon_hi = "XLONG_U",    ! longitude (ew-staggered grid) [degrees]
    vlat_hi = "XLAT_V",     ! latitude  (ns-staggered grid) [degrees]
    vlon_hi = "XLONG_V",    ! longitude (ns-staggered grid) [degrees]

    ! To use the Noah LSM additional fields must be specified on the high-res grid, see complete_icar_options.nml

    ! only required for some physics code (Noah LSM, water, Tiedke, KF(?))
    landvar = "LANDMASK",   ! land-water mask (as in WRF) 1=land, 0 or 2=water
/

!---------------------------------------------------------
!   Model levels specification (may be optional, but should be specified)
!   If compiled with gfortran put all levels on one line.
!---------------------------------------------------------
&z_info
    ! use dz_levels as a guide but allow dz to vary in space so that z is constant in space at flat_z_height
    ! space_varying = .False.
    ! height at which the z coordinate value should be constant in space (if space_varying=True), if < 0 make the model top flat (computed as sum(dz_levels) + mean(terrain))
    ! flat_z_height = -1

    ! compensate for varying dz in advection, effectively speeding up air through smaller dz windows.
    ! fixed_dz_advection = .False.

    !   Sample model level thickness [m]  Bottom levels could be thicker.
    dz_levels = 50.,   75.,  125.,  200.,  300.,  400.,  500.,  500.,  500.,  500.,   500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,    ! 1-20
               500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,   500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.     ! 20-40
/
